.card {
  perspective: 1500px;
  height: 100%;
  margin-bottom: 1rem;
  min-height: 400px;
  position: relative;
}

.card:focus-within .cardInner {
  box-shadow: 0 0 0 2px var(--primary-color);
  outline: none;
}

.cardInner {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 400px;
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  transform-style: preserve-3d;
  border-radius: 12px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  background: white;
}

:global(.dark-mode) .cardInner {
  background: var(--bg-dark);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

.cardInner.flipped {
  transform: rotateY(180deg);
  transform-origin: center;
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
  z-index: 100; /* Ensure flipped cards appear above others */
}

.cardFront,
.cardBack {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  border-radius: 12px;
  overflow: hidden;
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1), visibility 0s 0.3s;
  transform-style: preserve-3d;
  display: flex;
  flex-direction: column;
}

/* Hide front face when flipped */
.cardInner.flipped .cardFront {
  opacity: 0;
  pointer-events: none;
  visibility: hidden; /* Completely hide front when flipped */
}

.cardBack {
  transform: rotateY(180deg);
  padding: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  background: white;
  z-index: 2; /* Higher z-index */
  pointer-events: none; /* Ignore pointer events when not flipped */
  visibility: hidden; /* Hide back initially */
  opacity: 0; /* Hide back initially */
}

.cardInner.flipped .cardBack {
  pointer-events: auto; /* Enable interaction when flipped */
  visibility: visible; /* Show back when flipped */
  opacity: 1; /* Show back when flipped */
  transition: visibility 0s, opacity 0.6s ease-in-out;
  z-index: 2; /* Ensure back is above front when flipped */
}

:global(.dark-mode) .cardBack {
  background: var(--bg-dark);
}

.imageContainer {
  position: relative;
  height: 200px;
  overflow: hidden;
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.cardFront:hover .overlay {
  opacity: 1;
}

.cardFront:hover .image {
  transform: scale(1.1);
}

.cardFront::after {
  content: "";
  position: absolute;
  right: 10px;
  bottom: 10px;
  width: 24px;
  height: 24px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%234831D4'%3E%3Cpath d='M7.41,8.59L12,13.17l4.59-4.58L18,10l-6,6l-6-6L7.41,8.59z'/%3E%3C/svg%3E");
  background-size: contain;
  background-repeat: no-repeat;
  transform: rotate(-45deg);
  opacity: 0.5;
  transition: opacity 0.3s ease;
}

.cardFront:hover::after {
  opacity: 1;
}

.content {
  padding: 1.5rem;
}

.title {
  font-size: 1.2rem;
  margin-bottom: 0.75rem;
  color: var(--text-dark);
}

.backTitle {
  font-size: 1.4rem;
  margin-top: 0.5rem;
  margin-right: 1.5rem; /* Make space for the close button */
}

:global(.dark-mode) .title {
  color: var(--text-light);
}

.description {
  font-size: 0.95rem;
  line-height: 1.6;
  margin: 1rem 0 1.5rem;
  color: var(--text-dark);
  flex-grow: 1;
  overflow-y: auto; /* Allow scrolling if content is too long */
  max-height: 150px; /* Limit height to prevent overflow */
  padding-right: 0.5rem; /* Space for scrollbar */
}

.description::-webkit-scrollbar {
  width: 4px;
}

.description::-webkit-scrollbar-thumb {
  background-color: rgba(72, 49, 212, 0.3);
  border-radius: 4px;
}

:global(.dark-mode) .description {
  color: var(--text-light);
}

.links {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.5rem;
  margin-top: 1.5rem;
}

.link {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.6rem 1.2rem;
  border-radius: 50px;
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  color: white;
  font-size: 0.9rem;
  font-weight: 500;
  transition: all 0.3s ease;
  text-decoration: none;
  box-shadow: 0 2px 8px rgba(72, 49, 212, 0.2);
}

.link:hover {
  box-shadow: 0 5px 15px rgba(72, 49, 212, 0.4);
  transform: translateY(-2px);
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: auto;
}

.tag {
  font-size: 0.8rem;
  padding: 0.3rem 0.8rem;
  border-radius: 50px;
  background: rgba(72, 49, 212, 0.1);
  color: var(--primary-color);
  margin-bottom: 0.25rem;
  display: inline-block;
}

.cardBack .tag {
  background: rgba(72, 49, 212, 0.15);
  border: 1px solid rgba(72, 49, 212, 0.1);
}

:global(.dark-mode) .tag {
  background: rgba(60, 229, 252, 0.1);
  color: var(--secondary-color);
}

:global(.dark-mode) .cardBack .tag {
  background: rgba(60, 229, 252, 0.15);
  border: 1px solid rgba(60, 229, 252, 0.1);
}

.flipButton {
  padding: 0.6rem 1.2rem;
  border: none;
  border-radius: 50px;
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  color: white;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
}

.flipButton:hover {
  transform: scale(1.05);
  box-shadow: 0 5px 15px rgba(72, 49, 212, 0.3);
}

.closeButton {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  background: rgba(72, 49, 212, 0.1);
  border: none;
  font-size: 1.5rem;
  color: var(--text-dark);
  cursor: pointer;
  height: 30px;
  width: 30px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  z-index: 5; /* Ensure it's clickable */
}

:global(.dark-mode) .closeButton {
  color: var(--text-light);
  background: rgba(60, 229, 252, 0.1);
}

.closeButton:hover {
  background: rgba(72, 49, 212, 0.2);
  transform: scale(1.1);
}

:global(.dark-mode) .closeButton:hover {
  background: rgba(60, 229, 252, 0.2);
}
